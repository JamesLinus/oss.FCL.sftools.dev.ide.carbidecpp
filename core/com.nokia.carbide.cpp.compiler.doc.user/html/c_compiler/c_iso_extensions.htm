<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta name="LASTUPDATED" content="06/17/05 11:09:43" />
<title>Extensions to ISO C</title>
<link rel="StyleSheet" href="../../book.css" type="text/css"/>
</head>
<body bgcolor="#FFFFFF">
<h2>Extensions to ISO C</h2>
<p>The Carbide C language optionally extends ISO C. In most cases, you can control these extensions using specific pragmas.</p>
<ul>
  <li><a href="c_std_conformity.htm">Checking for Standard C and Standard C++ Conformity</a></li>
  <li><a href="c_cpp_comments.htm">C++ Comments</a></li>
  <li><a href="c_unnamed_args.htm">Unnamed Arguments in Function Definitions</a></li>
  <li><a href="c_macro_args.htm">A # Not Followed by a Macro Argument</a></li>
  <li><a href="c_endif_identifier.htm">Using an Identifier After #endif</a></li>
  <li><a href="c_typecast_ptrs.htm">Using Typecasted Pointers as lvalues</a></li>
  <li><a href="c_declare_var_addr.htm">Declaring Variables by Addres</a>s</li>
  <li><a href="c_ansi_keywords.htm">ANSI Keywords Only</a></li>
  <li><a href="c_expand_trigraphs.htm">Expand Trigraphs</a></li>
  <li><a href="c_char_const_as_int.htm">Character Constants as Integer Values</a></li>
  <li><a href="c_inlining.htm">Inlining</a></li>
  <li><a href="c_reuse_strings.htm">Reusing Strings</a></li>
  <li><a href="c_require_prototypes.htm">Require Function Prototypes</a></li>
  <li><a href="c_map_newlines.htm">Map Newlines to CR</a></li>
  <li><a href="c_relaxed_ptrs.htm">Relaxed Pointer Type Rules</a></li>
  <li><a href="c_unsigned_chars.htm">Use Unsigned Chars</a></li>
  <li><a href="c_use_longlong.htm">Using long long Integers</a></li>
  <li><a href="c_convert_ptrs.htm">Converting Pointers to Types of the Same Size</a></li>
  <li><a href="c_get_alignment_info.htm">Getting Alignment and Type Information at Compile Time</a></li>
  <li><a href="c_zero_length_arrays.htm">Arrays of Zero Length in Structures</a></li>
  <li><a href="c_bit_rotation.htm">Intrinsic Functions for Bit Rotation</a></li>
  <li><a href="c_d_constant_suffix.htm">The &ldquo;D&rdquo; Constant Suffix</a></li>
  <li><a href="c_short_dbl_type.htm">The short double Data Type</a></li>
  <li><a href="c_typeof_operator.htm">The __typeof__() and typeof() operators</a></li>
  <li><a href="c_init_local_arrays.htm">Initialization of Local Arrays and Structures</a></li>
  <li><a href="c_ranged_cases.htm">Ranges in case statements</a></li>
  <li><a href="c_function_identifier.htm">The __FUNCTION__ Predefined Identifier</a></li>
  <li><a href="c_gcc_ext_support.htm">GCC Extension Support</a></li>
  <li><a href="c_multibyte_support.htm">Multibyte and Unicode Support</a></li>
  <li><a href="c_decspec_decl.htm">The __declspec Declarator</a></li>
</ul>
<p>For information on target-specific extensions, refer to the Targeting manual for your particular target. </p>
<div id="footer">Copyright &copy; 2010 Nokia Corporation and/or its subsidiary(-ies). All rights reserved. <br>License: <a href="http://www.eclipse.org/legal/epl-v10.html">http://www.eclipse.org/legal/epl-v10.html</a></div>


</body>
</html>
