<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta name="LASTUPDATED" content="06/17/05 11:09:43" />
<title>Debugger panes for TRK </title>
<link rel="StyleSheet" href="../../../book.css" type="text/css"/>
</head>
<body bgcolor="#FFFFFF">
<h2>Debugger panes for TRK </h2>
<p>The <b>Debug/Run</b> windows <b>Debugger</b> panes for TRK provides control over entry points, message handling, and instruction set default settings.</p>
<p>Different options are available in the Debugger pane based on the type of TRK launch configuration, including:</p>
<ul><li><a href="#trk_runmode">Run mode debugging</a></li>
  <li><a href="#trk_stopmode">Stop mode debugging</a>   </li>
</ul>
<h3><a name="trk_runmode" id="trk_runmode"></a>Run-mode Debugger pane </h3>
<p>In run-mode you can control message handling and instruction sets. </p>
<p align="center"><img src="../images/page_run_mode_debugger.png" width="596" height="244"></p>
<p class="figure">Figure 1 - Debug windows Debugger pane for run mode debugging </p>
<h5>Table 1. Debugger pane &mdash; run-mode  options </h5>
<table width="94%"  border="0" cellpadding="2" cellspacing="0">
  <tr>
    <th width="38%" scope="col">Item</th>
    <th width="62%" scope="col">Explanation</th>
  </tr>
  <tr>
    <td><p><b>Break at entry point</b></p>
    </td>
    <td><p>When checked, break at the specified entry point entered into the text field. For .EXE targets, the default entry point is set to <span class="code">E32Main</span>. By default, the <b>Break at entry point</b> option is unchecked for all other target types.</p></td>
  </tr>
  <tr>
    <td><b>View program output </b></td>
    <td>When checked, show the contents of any program output  in the <b> TRK Progam Output Console</b>  in a <a href="../view_log.htm">Console</a> view. </td>
  </tr>
  <tr>
    <td><b>View messages between Carbide and debug agent </b></td>
    <td><p>When checked, show the communications between Carbide and the target device in  the <b> TRK Communication Log Console</b> of the Console view.  </p>
      <p class="note"><b>NOTE</b> You can pin the TRK Communication Log view so that it does not lose focus. </p></td>
  </tr>
  <tr>
    <td><b>Message retry delay (ms) </b></td>
    <td>Enter the delay time in milliseconds (ms) between 100 and 10000 the debugger should wait for a response. The default Message Retry Delay value is 2000. </td>
  </tr>
  <tr>
    <td><p><b>Default Instructon Set </b></p>
        <p>&nbsp;</p></td>
    <td><p>Specifies the default instruction set to use if the debugger cannot determine the processor mode in order to set breakpoints and to disassemble code. The options are: </p>
        <ul>
          <li>Auto (examine code at  current PC location) </li>
          <li>ARM (32-bit) </li>
          <li>THUMB (16-bit) </li>
        </ul>
      <p>By default the Instruction Set option uses ARM 32-bit.</p></td>
  </tr>
</table>
<p>&nbsp;</p>
<h3><a name="trk_stopmode" id="trk_stopmode"></a>Stop-mode Debugger pane</h3>
<p>In stop-mode use the <b>Startup Options</b> to  attach to a target and debug or run from the specified start address. Then use <b>Target Options</b> to specify the target's processor type,  and set which initialization and memory configuration files to use in the debug session. </p>
<p align="center"><img src="../images/panel_trk_debugger.png" width="611" height="389" /></p>
<p class="figure">Figure 2 - Debug windows Debugger pane for stop mode debugging </p>
<h5>Table 2. Debugger pane &mdash; stop-mode  options </h5>
<table width="94%"  border="0" cellpadding="2" cellspacing="0">
  <tr>
    <th width="38%" scope="col">Item</th>
    <th width="62%" scope="col">Explanation</th>
  </tr>
  <tr>
    <td><p><b>Break at entry point</b></p></td>
    <td><p>When checked, break at the specified entry point entered into the text field. For .EXE targets, the default entry point is set to <span class="code">E32Main</span>. By default, the <b>Break at entry point</b> option is unchecked for all other target types.</p></td>
  </tr>
  <tr>
    <td><b>Soft attach </b></td>
    <td>Enable the <b>Soft attach</b> option to attach a debug session to a target and debug from the specified start address instead of the target's default start address. When enabled the downloaded image option is ignored. </td>
  </tr>
  <tr>
    <td><b>Debug from start address </b></td>
    <td>Enable the <b>Debug from start addres</b>s option to debug from the target's default start address. </td>
  </tr>
  <tr>
    <td><b>Run from start address </b></td>
    <td>Enable the <b>Run from start addres</b>s option to run from the target's default start address. </td>
  </tr>
  <tr>
    <td><b>Start address (hex) </b></td>
    <td>Enter in hexidecimal format (<span class="code">0x0</span>) the starting address to use during the debug session. </td>
  </tr>
  <tr>
    <td><b>Reset target at the start of each debug session </b></td>
    <td>Forces the Carbide IDE to reset the target at the start of each debug session. This ensures that the debugging session uses the most up-to-date program code.</td>
  </tr>
  <tr>
    <td><b>Target Processor </b></td>
    <td>A drop down with a list of all supported processors. The process selection should help in determining the memory model. This will in turn help determine the base address and the offsets for the Symbian OS kernel aware information.</td>
  </tr>
  <tr>
    <td><b>Target initialization file </b></td>
    <td><p>Check this box to have the debugger run an initialization script when the debug session starts. For example, if a target device requires initialization for the debugger to be able to read and write memory or registers, you can specify an initialization script here.</p>
    <p> Click Browse to select a script file using a standard file selection dialog box. When using T32, most of the initialization is done in the CMM script file. With other debug protocols like Sophia, you can specify the initialization file, which can be run after connecting to the target. </p></td>
  </tr>
  <tr>
    <td><b>Memory configuration file </b></td>
    <td>Controls whether the debugger uses a memory configuration file when a debug session starts. The Carbide debugger uses this configuration file to know which memory is accessible, readable, and writable on the target.</td>
  </tr>
</table>

<div class="step">  
    <h4>To access the Debugger Pane</h4>
    <ol>
      <li>Select the  Run &gt; Debug...  menu item</li>
      <p>The <b>Debug</b> window appears. </p>
      <li>Select a Symbian OS Application TRK configuration in the Configurations list</li>
      <li>Click Debugger tab </li>
      <p>The <b>Debugger</b> pane appears (Figure 1). </p>
    </ol>
</div>
<h5>Common concepts</h5>
  <ul>
    <li><a href="../../concepts/debugger_about.htm">About the Debugger</a></li>
    <li><a href="../../concepts/trk.htm">Target Resident Kernel (TRK) </a></li>
</ul>
<h5 align="left">Common references </h5>
<ul>
  <li><a href="page_trk_main.htm">Main Pane</a></li>
  <li><a href="page_connection.htm">Connection Pane</a></li>
  <li><a href="page_file_transfer.htm">File Transfer Pane </a></li>
  <li><a href="app_trk_installation.htm">Installation Pane</a></li>
  <li><a href="page_executables.htm">Executables Pane</a></li>
</ul>
<div id="footer">Copyright &copy; 2009 Nokia Corporation and/or its subsidiary(-ies). All rights reserved. <br>License: <a href="http://www.eclipse.org/legal/epl-v10.html">http://www.eclipse.org/legal/epl-v10.html</a></div>

</body>
</html>
