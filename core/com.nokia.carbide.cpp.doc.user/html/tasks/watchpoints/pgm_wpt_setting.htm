<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta name="LASTUPDATED" content="06/17/05 11:09:43" />
<title>Setting a Watchpoint</title>
<link rel="StyleSheet" href="../../../book.css" type="text/css"/>
</head>
<body bgcolor="#FFFFFF">
<h2>Setting a Watchpoint</h2>
<p>Use the <b>Toggle Watchpoint</b> command to set a watchpoint on a global variable in a C/C++ editor view. A watchpoint suspends program execution when the memory location that you specify is accessed with a write or read operation and it's based on the access setting. Watchpoints can also be added directly in the <a href="../../reference/view_variables.htm">Variables</a>,  <a href="../../reference/view_breakpoints.htm">Breakpoints</a>, <a href="PLUGINS_ROOT/org.eclipse.cdt.doc.user/reference/cdt_u_outline_view.htm">Outline</a>, and the <a href="../../reference/view_memory_wnd.htm">Memory Rendering</a> views. </p>
<p>The debugger halts program execution on the line of source code that triggered the watchpoint. This is different than a breakpoint, which halts program execution prior to executing the line of source code on which the breakpoint is set.</p>
<ol>
  <p align="center"><img src="images/wnd_add_watchpoint.png" width="220" height="237" /></p>
  <p class="figure">Figure 1. Add Watchpoint window </p>
</ol>
<h5>Table 1. Add Watchpoint options </h5>
<table width="88%"  border="0" cellpadding="2" cellspacing="0">
  <tr>
    <th width="32%" scope="col">Name</th>
    <th width="52%" scope="col">Description</th>
  </tr>
  <tr>
    <td><div align="left"><b>Expression to watch </b></div></td>
    <td>If not already entered, you can enter any arbitrary memory location for watching. </td>
  </tr>
  <tr>
    <td><b>Units</b></td>
    <td>Define the size of the units to monitor. This setting defaults to the size of the variable to watch. If an arbitrary memory address is entered, then the default unit size is set to 1 byte. Once you enable the units checkbox, you're must enter a value for it.</td>
  </tr>
  <tr>
    <td><b>Access: Write/Read </b></td>
    <td>Check the appropriate access type to trigger  the watchpoint for the specified memory location. </td>
  </tr>
</table>
<div class="step">
  <h4>Setting a Watchpoint</h4>
  <p>The following steps work with C/C++ editor views, as well as the <b>Variables</b>, <b>Breakpoints</b>, and <b>Outline</b> views: </p>
  <p class="note"><b>NOTE</b> Watchpoints are  shown in the Outline view, while breakpoints are not.</p>
  <ol>
    <li>Right-click any global variable in the view </li>
    <p>The global variable is highlighted in the source file. </p>
    <li>Select the  Toggle Watchpoint menu item </li>
    <p>The <b>Add Watchpoint</b>  window appears (Figure 1).</p>
    <li>Select the Access type for the watchpoint (write, read, or select both) </li>
    <p>Click to set a checkmark in the <b>Write</b>, <b>Read</b>, or both checkboxes at once. </p>
    <li>Click OK </li>
    <p>The <b>Add Watchpoint</b> window closes, the new watchpoint appears in the <a href="../../reference/view_breakpoints.htm">Breakpoints view</a> list, and the appropriate <a href="../../concepts/watchpoints.htm">watchpoint status icon</a> appears in the marker bar next to the global variable. </p>
  </ol>
</div>
<div class="step">
  <h4>Setting a Watchpoint in Memory Rendering Views </h4>
  <ol>
    <li>Right-click any global variable address previously added to the Memory Rendering view </li>
    <p>The global variable is highlighted in the source file. </p>
    <li>Select the  Add Watchpoint (C/C++) menu item </li>
    <p>The <b>Add Watchpoint</b> window appears (Figure 1).</p>
    <li>Select the Access type for the watchpoint (write, read, or select both) </li>
    <p>Click to set a checkmark in the <b>Write</b>, <b>Read</b>, or both checkboxes at once. </p>
    <li>Click OK </li>
    <p>The <b>Add Watchpoint</b> window closes, the new watchpoint appears in the <a href="../../reference/view_breakpoints.htm">Breakpoints view</a> list, and the appropriate <a href="../../concepts/watchpoints.htm">watchpoint status icon</a> appears in the marker bar next to the global variable. </p>
  </ol>
</div>
<h5>Related concepts</h5>
<ul>
  <li><a href="../../concepts/watchpoints.htm">Watchpoints</a></li>
  <li><a href="../../concepts/breakpoints.htm">Breakpoints</a></li>
</ul>
<h5>Related tasks </h5>
<ul>
  <li><a href="pgm_wpt_setting.htm">Setting Watchpoints</a></li>
  <li><a href="pgm_wpt_enable.htm">Enabling Watchpoints</a></li>
  <li><a href="pgm_wpt_disable.htm">Disabling Watchpoints</a></li>
  <li><a href="pgm_wpt_clearing.htm">Clearing Watchpoints</a> </li>
</ul>
<h5>Related references </h5>
<ul>
  <li><a href="../../reference/view_breakpoints.htm">Breakpoints view</a> </li>
</ul>
<div id="footer">Copyright &copy; 2009 Nokia Corporation and/or its subsidiary(-ies). All rights reserved. <br>License: <a href="http://www.eclipse.org/legal/epl-v10.html">http://www.eclipse.org/legal/epl-v10.html</a></div>

</body>
</html>
