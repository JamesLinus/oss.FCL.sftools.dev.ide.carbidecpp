<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta name="LASTUPDATED" content="06/17/05 11:09:43" />
<title>Debug project on target device Tutorial</title>
<link rel="StyleSheet" href="../../../book.css" type="text/css"/>
</head>
<body >
<h2>Debug project on target device</h2>
<p>In this example we demonstrate how to debug applications on a remote device using the Application TRK remote debug agent. This enables you to test  programs on the actual device it will operate on while observing its behavior using the Carbide debugger. The steps to do this include:</p>
<ol>
    <li><a href="run_mode_debug_example_01.htm">Connect</a> target device to PC</li>
    <li><a href="run_mode_debug_example_02.htm">Install</a> TRK remote agent (v3.2.7) or later on the target device</li>
    <li><a href="run_mode_debug_example_03.htm">Configure</a> project for downloading</li>
    <li><strong>Debug project on target device</strong></li>
</ol>
<hr>
<p>You debug on a remote device using the exact same methods used for the emulator. Once the project is built and downloaded to the target device, the TRK remote agent then takes control. Then, using the Carbide debugger you can use all the debugger features to exercise the program on the device while monitoring its vitals in the <a href="../../reference/perspective_debug.htm">Debug</a> perspective.</p>
<div class="step">
    <h4>Debugging a program on a remote device</h4>
    <ol>
        <li>Set breakpoints in the program.
        	<p><a href="../../debugger/breakpoints/toggling_breakpoints.htm">Set breakpoints</a> at the critical points in the program where you want to stop execution.</p>
        </li>
        <li>Click the Debug icon (<img src="../../reference/pref_carb_symbian_sdk.htm" alt="Debug icon" width="17" height="17" align="absmiddle">) to launch the program for debugging on the target device.
        	<p>Follow the steps in <a href="run_mode_debug_example_03.htm">Configure project for downloading</a> to build and launch the program for debugging.</p>
        </li>
        <li>Use the Carbide debugger to examine program internals and control its execution.
        	<p>Use any of the following features to debug your program:</p>
            <ul>
                <li>Use the various <a href="../../debugger/debug/debug.htm">stepping</a> commands to walk through the program.</li>
                <li>Examine and change variables and expressions in the <a href="../../debugger/variables/variables.htm">Variables</a> view.</li>
                <li>Examine the stack in the <a href="../../debugger/debug/viewing_debug.htm">Debug</a> view</li>
                <li>Review the assembler code in the <a href="../../reference/view_disassembly.htm">Disassembly</a> view</li>
                <li>Examine memory usage in the <a href="../../reference/view_memory.htm">Memory</a> view</li>
            </ul>
        </li>
        </ol>
</div>
<h4>Other references</h4>
<ul>
    <li><a href="run_mode_debug_example_00.htm">Remote Target Debugging (Run-mode)</a></li>
</ul>
<div id="footer">Copyright &copy; 2010 Nokia Corporation and/or its subsidiary(-ies). All rights reserved. <br>License: <a href="http://www.eclipse.org/legal/epl-v10.html">http://www.eclipse.org/legal/epl-v10.html</a></div>

</body>
</html>