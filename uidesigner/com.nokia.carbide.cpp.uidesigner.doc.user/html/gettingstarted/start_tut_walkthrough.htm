<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<title>Basic Walk-through</title>
<link rel="StyleSheet" href="../../book.css" type="text/css"/>
</head>
<body bgcolor="#FFFFFF">
<h2>Basic Walk-through</h2>

<p>Creating a UI Designer project  is very much like creating a non-GUI project. The difference is that UI Designer handles many of the common chores for adding UI components, including their related resources and most of the source code to implement them automatically. The basic process  to create a UI Designer project includes: </p>
<ol>
  <li>Creating a UI Designer project</li>
  <li>Designing all of the project's interface elements </li>
  <li>Adding resources, images, and other items </li>
  <li>Begin connecting events and adding implementation code</li>
</ol>
<h4>Creating a UI Designer project</h4>
<p>You start by <a href="../tasks/projects/task_proj_new-00.htm">creating</a> a UI project based upon a SDK. </p>
<p>Use the New Project wizard to create a project that supports UI Designer. UI Designer projects are normally identified in the Templates page of the new project wizard using &#8220;UI Designer&#8221; in the title. For example, &#8220;S60 3rd Ed. GUI Application with UI Designer.&#8221;</p>
<p>The new project wizard walks you through the creation process asking you to provide information on the type of project interface, the SDK that the project will operate with, and other information to set the project up for  development. Once the GUI project is created, it appears in the Project Explorer.</p>
<h4>Creating  the project's interface</h4>
<p>Once the UI project is ready, you can begin adding UI designs to your design. Each UI design represents a different view the user will interact with when using  the program. Each UI design is then  implemented using the  available SDK components. Components are placed in a UI design according to SDK design conventions. This enforces good design at the component level while freeing developers to quickly create interfaces using multiple UI designs.</p>
<p>Every program view begins with <a href="../tasks/uidesign/task_uid_new-00.htm">creating</a> a new UI design. Once UI Designer creates the  design, it appears in the <a href="../reference/uidesign/ref_ui_design_editor.htm">UI Design Editor</a> view for editing and in the Project Explorer as a <span class="code">.uidesign</span> file. In the UI Design Editor, you can <a href="../tasks/components/task_comp_new_obj.htm">add</a>, <a href="../tasks/components/task_comp_move_obj.htm">position</a>, <a href="../tasks/components/task_comp_resize_obj.htm">resize</a>, <a href="../tasks/components/task_comp_reorder_obj.htm">reorder</a>, <a href="../tasks/components/task_comp_align_objs.htm">align</a>, and <a href="../tasks/components/task_comp_delete_obj.htm">delete</a> components in the design until you are satisfied. UI Designer automatically generates the source files to implement the design you created. </p>
<p>Click on a component to select it, then use the <a href="../reference/views/ref_properties_view.htm">Properties</a> view to assign properties, events, add lists, images, and generally refine the component to suit the program you are creating. UI Designer updates the generated files as necessary to keep them in synch with your decisions. </p>
<p>To be most productive, it makes sense  to design as many of the program views as possible. This ensures that UI Designer writes as much of the source code as possible that you will need to connect later. A more interactive design process will still work, but when it comes time to add your own code to the generated files, you may find yourself back in the UI Design Editor adding a missing component that you need to connect with.</p>
<h4>Adding resources, images, and other items </h4>
<p>Depending upon the type of program you are creating it may require additional resources, like images, to operate. Use the standard project wizards to add AIF, MBM, and MIF resource files to your project. </p>
<h4>Connecting events and adding implementation code</h4>
<p>Once all of your interface views are completed its time to add your code to that generated by UI Designer. Right-click a component and choose <b>Go to 'selected' Event code</b> to open the generated file associated with the component in an editor view and start adding your program logic. Be careful to only add code to areas not generated by UI Designer to ensure your modifications will be preserved. These areas are marked with the comment lines:</p>
<p class="listing"> // [[[ begin generated region: do not modify [Generated Initializers]<br />
// ]]] end generated region [Generated Initializers]</p>
<p>Some components will  open specialized editors. For example, if you right-click the <span class="code">title</span> component in the <span class="code">Status Pane</span> of the program, you can select <b>Edit Image Property</b> item to open the <a href="../reference/views/ref_edit_image_property.htm">Edit Image Property</a> window. </p>
<p>Once you have your connecting code in place, simply build and debug just as you would any other project. </p>
<div id="footer">Copyright &copy; 2009 Nokia Corporation and/or its subsidiary(-ies). All rights reserved. <br>License: <a href="http://www.eclipse.org/legal/epl-v10.html">http://www.eclipse.org/legal/epl-v10.html</a></div>

</body>
</html>
