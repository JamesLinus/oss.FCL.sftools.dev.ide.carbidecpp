SourceGenAdapterScript.TemplateIdInUse=template id ''{0}'' is already in use in component {1}
SourceGenAdapterScript.TemplateGroupIdInUse=template group id ''{0}'' is already used in component {1} 
SourceGenAdapterScript.TemplateGroupIdFormInUse=template group id ''{0}'' (form ''{1}'') is already used in component {2} 
SourceGenAdapterScript.UseTemplateWithoutBase=useTemplate element is useless; component {0} has no baseComponent
SourceGenAdapterScript.UseTemplateBadId=useTemplate in component {2} references id ''{0}'' not present in or below base component {1}  
SourceGenAdapterScript.UseTemplateReuse=useTemplate or useTemplateGroup of already defined template id ''{0}'' in component {1} 
SourceGenAdapterScript.UseTemplateGroupBadId=useTemplateGroup in component {2} references id ''{0}'' not present in or below base component {1} 
SourceGenAdapterScript.UseTemplateGroupReuse=useTemplateGroup of already defined template group id ''{0}'' in component {1}
SourceGenAdapterScript.IllegalId=the string ''{0}'' is not a valid identifier in component {1}
SourceGenAdapterScript.JsSuperWithoutBase=the '${jsSuper}' construct is meaningless in component {0} which is not derived from anything
SourceGenXMLParser.CannotSpecifyWithBase=the attribute ''{0}'' is not allowed in <defineLocation> when baseLocation is specified (in component {1})
SourceGenXMLParser.UnknownPassArgument=Argument ''{0}'' referenced from <passArgument> is not defined by any caller
SourceGenXMLParser.UnknownMacroArgument=Unknown argument name ''{0}'' when expanding macro ''{1}''
SourceGenXMLParser.MustSpecifyWithoutBase=the attribute ''{0}'' must be specified in <defineLocation> when baseLocation is not specified (in component {1})
SourceGenXMLParser.MissingExpandArgument=No value provided for non-optional macro argument ''{0}''
SourceGenXMLParser.ReusedLocationId=the location id ''{0}'' is multiply defined in component {1}
SourceGenXMLParser.DupMacroArgument=Duplicate declaration of macro argument ''{0}'' (check <importArguments> and other <macroArgument>s)
SourceGenXMLParser.UnresolvedDupMacroArgument=Argument ''{0}'' imported from multiple macros; it must be redefined in this macro
SourceGenXMLParser.InvalidExceptArgumentsUsage=Invalid use of 'exceptArguments' along with 'arguments' in <importArguments macroName=''{0}''>
SourceGenXMLParser.DupExpandArgument=Value for macro argument ''{0}'' specified more than once (check <passArguments>, attributes, and <expandArgument>s)
SourceGenXMLParser.UnknownExpandArgument=No such macro argument ''{0}'' 
SourceGenXMLParser.BadPassArguments=Cannot use <passArguments> from top-level <expandMacro>
SourceGenXMLParser.NeedLocationId=the ''id'' attribute is missing in <defineLocation ... location="{0}"> in component {1}
SourceGenXMLParser.InvalidBoolean=Non-boolean value ''{0}'' for attribute ''{1}'' in <defineLocation id="{2}">
SourceGenXMLParser.NoSuchMacro=Undefined macro ''{0}''
SourceGenAdapterScript.InvalidReturnFromGenerate=the function generate() for component {0} does not return a list or an array
SourceGenAdapterScript.TemplateWithNoPhaseOrLocation=the template ''{0}'' does not specify a phase or a location; this is probably an error
SourceGenAdapterScript.ErrorDuringScript=error reported while compiling or executing script: {0}
SourceGenAdapterScript.InlineWithUnknownScope=the <inline scope="{0}"> is not recognized, expected "prototype" or "function" in component {1}
SourceGenXMLParser.NoPhaseInDefineLocation=a phase (''{0}'') is not allowed when defining templates for <defineLocation> in component {1}
SourceGenXMLParser.BadImportArgumentsMacro=Unknown macro ''{0}'' referenced from <importArguments>
SourceGenXMLParser.BadPassArgumentsArgument=Cannot import unknown argument ''{0}'' from macro ''{1}''
SourceGenXMLParser.DupMacroArgumentOnImport=Duplicate macro argument ''{0}'' when importing arguments from macro ''{1}''
SourceGenXMLParser.UnknownMacroVariableModifier=Unknown modifier ''{0}'' on argument ''{1}'' when expanding macro ''{2}''
SourceGenAdapterScript.IfEventNotMatched=ifEvent=''{0}'' in component {1} does not match any declared event
SourceGenXMLParser.InvalidTemplateIdInMacro=Templates/inlines cannot have ids (''{0}'') inside macros 
SourceGenXMLParser.RedefiningMacroError=Macro redefinition in same component ''{0}''
SourceGenXMLParser.MacroErrorFormat=(expanding macros: {0})\n({1})
SourceGenXMLParser.DefineMacroErrorFormat=(defining macro ''{0}'')
SourceGenXMLParser.NonFunctionInlineWithCondition=Invalid use of conditional attribute (''{0}'') with <inline> outside function scope (component ''{1}'')
